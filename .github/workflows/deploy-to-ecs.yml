name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      # Step 1: Checkout the code with full depth
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Log in to AWS ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 # Update with your desired region

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 3: Build and push the Docker image to ECR
      - name: Build, tag, and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
        run: |
          echo "Building Docker image with tag: $IMAGE_TAG"
          docker build -t $REPOSITORY_URI:$IMAGE_TAG -f student-management-system/Dockerfile student-management-system
          docker push $REPOSITORY_URI:$IMAGE_TAG

      # Step 4: Deploy to ECS
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          service: ${{ secrets.ECS_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          image: ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
          wait-for-service-stability: true
